"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[300],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return m}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(o),m=r,h=c["".concat(u,".").concat(m)]||c[m]||p[m]||i;return o?n.createElement(h,a(a({ref:t},d),{},{components:o})):n.createElement(h,a({ref:t},d))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},3234:function(e,t,o){o.r(t),o.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var n=o(7462),r=o(3366),i=(o(7294),o(3905)),a=["components"],l={title:"Guide to PCIe Passthrough (GPU and Sound)"},u=void 0,s={unversionedId:"guide-passthrough",id:"guide-passthrough",title:"Guide to PCIe Passthrough (GPU and Sound)",description:"Enable BIOS features",source:"@site/docs/guide-passthrough.md",sourceDirName:".",slug:"/guide-passthrough",permalink:"/docs/guide-passthrough",draft:!1,editUrl:"https://github.com/notAperson535/OneClick-macOS-Simple-KVM/tree/docs/docs/guide-passthrough.md",tags:[],version:"current",frontMatter:{title:"Guide to PCIe Passthrough (GPU and Sound)"},sidebar:"docs",previous:{title:"How to increase screen resolution",permalink:"/docs/guide-screen-resolution"},next:{title:"Audio passthrough (without external card)",permalink:"/docs/guide-audio"}},d={},p=[{value:"Enable BIOS features",id:"enable-bios-features",level:2},{value:"Get Some Information",id:"get-some-information",level:2},{value:"Example",id:"example",level:3},{value:"Dump the ROM",id:"dump-the-rom",level:2},{value:"Load the vfio-pci module",id:"load-the-vfio-pci-module",level:2},{value:"Add Kernel Flags",id:"add-kernel-flags",level:2},{value:"AMD",id:"amd",level:3},{value:"Intel",id:"intel",level:3},{value:"Attach card to QEMU",id:"attach-card-to-qemu",level:2}],c={toc:p};function m(e){var t=e.components,o=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"enable-bios-features"},"Enable BIOS features"),(0,i.kt)("p",null,"To use PCIe Passthrough, you will need a compatible motherboard and CPU with support for iommu. Look up your motherboard manual on how to enable these features, but they are commonly named ",(0,i.kt)("inlineCode",{parentName:"p"},"VT-d")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"AMD Vi"),"."),(0,i.kt)("h2",{id:"get-some-information"},"Get Some Information"),(0,i.kt)("p",null,"To pass through a card, you'll need to know some value pertaining to the card itself: The Device IDs, and BDF IDs. The following command will give a list of relevant devices to use in the next steps."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'lspci -nn | grep "VGA\\|Audio"\n')),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"An example output might look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"26:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Curacao XT / Trinidad XT [Radeon R7 370 / R9 270X/370X] [1002:6810]\n26:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Oland/Hainan/Cape Verde/Pitcairn HDMI Audio [Radeon HD 7000 Series] [1002:aab0]\n")),(0,i.kt)("p",null,"The first value (",(0,i.kt)("inlineCode",{parentName:"p"},"26:00.0"),") is the BDF ID, and the last (",(0,i.kt)("inlineCode",{parentName:"p"},"1002:6810"),") is the Device ID. Cards with a built-in audio controller have to be passed together, so note the IDs for both subdevices."),(0,i.kt)("h2",{id:"dump-the-rom"},"Dump the ROM"),(0,i.kt)("p",null,"If you do not have a ROM file for your GPU, follow these steps."),(0,i.kt)("p",null,"Running this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'find /sys/devices -name "rom"\n')),(0,i.kt)("p",null,"Will output something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0/0000:02:00.0/0000:03:00.0/rom\n/sys/devices/pci0000:00/0000:00:02.0/rom\n")),(0,i.kt)("p",null,"In this case the first one is the proper one to use. Next, using the proper selection, run these two commands to copy the rom to the current folder."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'echo 1 | sudo tee "/sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0/0000:02:00.0/0000:03:00.0/rom"\n\nsudo cat "/sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0/0000:02:00.0/0000:03:00.0/rom" > vbios.rom\n')),(0,i.kt)("p",null,"If this command is successful, move on to the next step. If not, try a different device and see if it works."),(0,i.kt)("p",null,"Next, the file needs to be moved into the proper directory and given the proper permissions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo cp vbios.rom /usr/share/vgabios/\n\nsudo chmod 777 /usr/share/vgabios/vbios.rom\n")),(0,i.kt)("h2",{id:"load-the-vfio-pci-module"},"Load the vfio-pci module"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"vfio-pci")," module is not included in the kernel on all systems, you may need for load it as part of initramfs. Look up your distro's documentation on how to do this."),(0,i.kt)("p",null,"For Ubuntu and similar, ",(0,i.kt)("a",{parentName:"p",href:"https://forum.level1techs.com/t/ubuntu-24-04-dual-quadro-vfio-quick-start/212639"},"this guide"),' is a good reference. Stop at the "configure virt manager" part.'),(0,i.kt)("h2",{id:"add-kernel-flags"},"Add Kernel Flags"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"iommu")," kernel module is not enabled by default, but you can enable it on boot by passing the following flags to the kernel. Replace the Device IDs with your corresponding card."),(0,i.kt)("h3",{id:"amd"},"AMD"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iommu=pt amd_iommu=on vfio-pci.ids=1002:66af,1002:ab20\n")),(0,i.kt)("h3",{id:"intel"},"Intel"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"iommu=pt intel_iommu=on vfio-pci.ids=1002:66af,1002:ab20\n")),(0,i.kt)("p",null,"To do this permanently, you can add it to your bootloader. If you're using GRUB, for example, edit ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/default/grub")," and add the previous lines to the ",(0,i.kt)("inlineCode",{parentName:"p"},"GRUB_CMDLINE_LINUX_DEFAULT")," section, then run ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo update-grub")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo grub-mkconfig")," on some systems) and reboot."),(0,i.kt)("h2",{id:"attach-card-to-qemu"},"Attach card to QEMU"),(0,i.kt)("p",null,"You will need to attach the cards using the BDF IDs for the audio and video controller. The following example shows the config for a card with two devices. The romfile parameter is optional. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," You may need to run ",(0,i.kt)("inlineCode",{parentName:"p"},"basic.sh")," as sudo for the card to work."),(0,i.kt)("p",null,"In this case the rom file is at ",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/share/vgabios/vbios.rom")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    -vga none \\\n    -device pcie-root-port,bus=pcie.0,multifunction=on,port=1,chassis=1,id=port.1 \\\n    -device vfio-pci,host=26:00.0,bus=port.1,multifunction=on,romfile=/usr/share/vgabios/vbios.rom \\\n    -device vfio-pci,host=26:00.1,bus=port.1 \\\n")))}m.isMDXComponent=!0}}]);